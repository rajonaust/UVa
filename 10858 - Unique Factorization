/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 10858 - Unique Factorization ( UVa )
    ALGORITHM : Brute Force
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

vector < vector <int> > V ;
int arr[256] ;

void backtrack(int N,int cnt,int prev)
{
    if(N==1)
    {
        if(cnt==1) return ;
        vector < int > T ;
        for(int i=0;i<cnt;i++) T.pb(arr[i]);
        V.pb(T);
        return ;
    }

    for(int i=prev;i<=N;i++)
    {
        if(N%i==0)
        {
            arr[cnt] = i ;
            backtrack(N/i,cnt+1,i);
        }
    }
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int N ;
    while( cin >> N && N!=0 )
    {
        V.clear();
        if(N==1)
        {
            puts("0");
            continue ;
        }

        backtrack(N,0,2);
        printf("%d\n",V.size());

        for(int i=0;i<V.size();i++)
        {
            vector <int> T = V[i] ;

            for(int j=0;j<T.size();j++)
            {
                if(j!=0) printf(" ");
                printf("%d",T[j]);
            }

            puts("");
        }
    }
    return 0;
}
