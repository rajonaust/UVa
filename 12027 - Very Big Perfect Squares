/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 12027 - Very Big Perfect Squares ( UVa )
    ALGORITHM : Simulation
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

string input ;

int getSize(int N)
{
    if(N==0) return 1 ;
    int res = 0 ;
    while( N!=0 ) res++ , N/=10 ;
    return res ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    while( cin >> input )
    {
        if(input == "0" ) break ;
        int len = input.size() , lo = 0 , hi = 10000 , ans = 0 , res = 1 ;

        while( lo<=hi )
        {
            int mid = (lo+hi)/2;
            if(2*mid-1<=len) ans = mid , lo = mid+1 ;
            else hi = mid - 1 ;
        }

        for(int i=2;i<=9;i++)
        {
            int sz = getSize(i*i) ;

            if(sz+2*(ans-1)>len) break ;
            if(sz+2*(ans-1)<len) { res = i ; continue ; }

            if(sz==1) if(i*i<=input[0]-'0') res = i ;
            if(sz==2)
            {
                if((i*i)/10<input[0]-'0') res = i ;
                else if((i*i)/10==input[0]-'0'&&(i*i)%10<=input[1]-'0') res = i ;
            }
        }

        printf("%d",res);
        for(int i=1;i<ans;i++) printf("0") ;
        puts("");
    }
    return 0;
}
