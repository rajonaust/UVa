/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 12220 - Divisible Subsequences ( UVa )
    ALGORITHM : Dynamic Programming
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

map <int,long long> dp;

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int c ;
    cin >> c ;
    while( c-- )
    {
        dp.clear(); dp[0] = 1 ;
        int d , n ;
        cin >> d >> n ;
        ll ans = 0 , sum = 0 ;
        for(int i=1;i<=n;i++)
        {
            int a ;
            cin >> a ;
            sum=(sum+a)%d;
            ans+=dp[sum];
            dp[sum]++;
        }
        cout << ans << endl ;
    }
    return 0;
}
