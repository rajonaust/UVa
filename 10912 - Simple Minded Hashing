/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 10912 - Simple Minded Hashing ( UVa )
    ALGORITHM : Dynamic Programming
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

ll dp[35][1000][35];

ll solve(int L,int S,int prev)
{
    if( L==0 || S==0 ) return L==0&&S==0 ? 1 : 0 ;

    ll &ret = dp[L][S][prev] ;
    if(ret!=-1) return ret ;
    ret = 0 ;

    for(int i=prev+1;i<=26;i++) if(S-i>=0) ret+=solve(L-1,S-i,i);

    return ret ;
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int L , S, cas = 1 ;
    while( cin >> L >> S && (L!=0&&S!=0) )
    {
        if(L>30||S>900) cout << "Case " << cas++ << ": 0"<< endl ;
        else
        {
            memo(dp,-1);
            cout << "Case " << cas++ << ": " << solve(L,S,0) << endl ;
        }
    }
    return 0;
}
